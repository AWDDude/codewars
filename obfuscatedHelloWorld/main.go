package main; import "fmt"; func main() { c1, c2, c3, c4, c5, data := make(chan []int), make(chan []int), make(chan []int), make(chan []int), make(chan []int), []int{48, 12, 10, 5, 34, 92, 404, 56, 56, 151, 216, 12, 396, 474, 162, 45, 658, 723, 222, 86, 12793, 12898, 286, 39, 59, 95, 328, 82, 47, 50, 102, 34, 992, 746, 33, 99, 238, 330, 366, 61, 856, 952, 774, 129, 892, 996, 309450, 12378, 63, 136, 12067, 9873}; go a(c1, c2); go s(c2, c3); go m(c3, c4); go d(c4, c5); data = append([]int{0}, data...); c1 <- data;	w(c5, c1) }; func a(i chan []int, o chan []int) { var a []int; for { a = <-i; a[1] = a[0] + a[1]; o <- a[1:] } }; func s(i chan []int, o chan []int) { var a []int; for { a = <-i; a[1] = a[0] - a[1]; o <- a[1:] } }; func m(i chan []int, o chan []int) { var a []int; for { a = <-i; a[1] = a[0] * a[1]; o <- a[1:] } }; func d(i chan []int, o chan []int) { var a []int; for { a = <-i; a[1] = a[0] / a[1]; o <- a[1:] } }; func w(i chan []int, o chan []int) { var a []int; for { a = <-i; fmt.Printf("%c", a[0]); if len(a) <= 1 { break }; o <- a } }
